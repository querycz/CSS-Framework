/**
 * Mixins
 */


// Mixin pro sprite s podporou zařízení s vysokým rozlišením. Použití např. ".sprite(-194px, -81px);"
@mixin sprite-image($x, $y) {
	background: url(../img/sprite.png) no-repeat $x $y;
	@media only screen and (min-device-pixel-ratio: 2),
	only screen and (-webkit-min-device-pixel-ratio: 2),
	only screen and (-moz-min-device-pixel-ratio: 2),
	only screen and (-o-min-device-pixel-ratio: 2/1) {
		background-image: url(../img/sprite@2x.png);
		background-size: 640px 440px;
	}
}

// Usage.jumbotron { .retina-image("/img/bg-1x.png", "/img/bg-2x.png", 100px, 100px); }
@mixin retina-image($file-1x, $file-2x, $width-1x, $height-1x) {
	background-image: url("#{$file-1x}");
	@media only screen and (-webkit-min-device-pixel-ratio: 2),
	only screen and (min--moz-device-pixel-ratio: 2),
	only screen and (-o-min-device-pixel-ratio: 2/1),
	only screen and (min-device-pixel-ratio: 2),
	only screen and (min-resolution: 192dpi),
	only screen and (min-resolution: 2dppx) {
		background-image: url("#{$file-2x}");
		background-size: $width-1x $height-1x;
	}
}

// Mixin pro border-radius. Usage ".border-radius (5px);".
@mixin border-radius($radius) {
	-moz-border-radius: $radius;
	-webkit-border-radius: $radius;
	-khtml-border-radius: $radius;
	border-radius: $radius;
}

// Second border-radius mixin with specific corners  (6px, 6px, 6px, 6px);.
@mixin border-radius-corners($lt, $rt, $rb, $lb) {
	-moz-border-radius: $lt $rt $rb $lb;
	-webkit-border-radius: $lt $rt $rb $lb;
	-khtml-border-radius: $lt $rt $rb $lb;
	border-radius: $lt $rt $rb $lb;
}

// Mixin for smooth transition effect between the element attributes
@mixin transition($time) {
	-webkit-transition: all $time linear;
	-moz-transition: all $time linear;
	-ms-transition: all $time linear;
	-o-transition: all $time linear;
	transition: all $time linear;
}

// Mixin for transform animation
@mixin transform($size) {
	-webkit-transform: scale($size);
	-moz-transform: scale($size);
	-o-transform: scale($size);
	-ms-transform: scale($size);
	transform: scale($size);
}

// Grid mixin for making a row
@mixin make-row() {
	margin: 0 -#{$grid-gutter} $grid-row-bottom-margin -#{$grid-gutter};
	@extend .clearfix;
}

// Grid mixin for making a column
@mixin make-column($columns) {
	min-height: 1px;
	padding: 0 $grid-gutter;
	box-sizing: border-box;
	margin-bottom: $grid-col-bottom-margin;

	@media only screen and (min-width: $grid-float-breakpoint) {
		float: left;
		margin-bottom: 0;
		width: percentage($columns / $grid-columns);
	}
}

// Grid mixin for pushing a column right by n columns via margin
@mixin make-column-offset($columns) {
	@media only screen and (min-width: $grid-float-breakpoint) {
		margin-left: percentage($columns / $grid-columns);
	}
}